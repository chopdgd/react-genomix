import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import _classCallCheck from"@babel/runtime/helpers/esm/classCallCheck";import _createClass from"@babel/runtime/helpers/esm/createClass";import _possibleConstructorReturn from"@babel/runtime/helpers/esm/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime/helpers/esm/getPrototypeOf";import _inherits from"@babel/runtime/helpers/esm/inherits";import React from"react";import{Cell}from"fixed-data-table-2";import{Button,Popup,Icon}from"semantic-ui-react";import{get}from"lodash";import{utils}from"../../index";var PublicEvidenceFixedCell=/*#__PURE__*/function(a){function b(){var a,c;_classCallCheck(this,b);for(var d=arguments.length,e=Array(d),f=0;f<d;f++)e[f]=arguments[f];return c=_possibleConstructorReturn(this,(a=_getPrototypeOf(b)).call.apply(a,[this].concat(e))),c.renderRating=function(a,b,c){var d="grey",e="Not present in ".concat(a,"!"),f=React.createElement("p",null,e);return b&&(d="yellow",e="Present in ".concat(a,"!"),f=React.createElement("div",null,React.createElement("p",null,e),React.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:c},React.createElement(Button,{fluid:!0,content:"Go to ".concat(a)})))),React.createElement(Popup,{trigger:React.createElement(Icon,{color:d,name:"star"}),content:f,hoverable:!0})},c}return _inherits(b,a),_createClass(b,[{key:"render",value:function A(){var a,b=this.props,c=b.data,d=b.rowIndex,e=b.columnKey,f=b.chromosomeKey,g=b.positionKey,h=b.referenceKey,i=b.alternateKey,j=b.cosmicKey,k=b.hgmdKey,l=b.clinvarKey,m=b.gnomadKey,n=_objectWithoutProperties(b,["data","rowIndex","columnKey","chromosomeKey","positionKey","referenceKey","alternateKey","cosmicKey","hgmdKey","clinvarKey","gnomadKey"]),o=c[d],p=get(o,f),q=get(o,g),r=get(o,h),s=get(o,i),t=get(o,j),u=get(o,k),v=get(o,l),w=get(o,m);t&&(a=utils.urlBuilders.cosmicEntry(t));var x;u&&(x=utils.urlBuilders.hgmdVariant(u));var y;v&&(y=utils.urlBuilders.clinvarEntry(v));var z;return w&&(z=utils.urlBuilders.gnomadVariant(p,q,r,s)),React.createElement(Cell,n,this.renderRating("COSMIC",t,a),this.renderRating("HGMD",u,x),this.renderRating("ClinVar",v,y),this.renderRating("gnomAD",w,z))}}]),b}(React.PureComponent);PublicEvidenceFixedCell.defaultProps={data:[]};export default PublicEvidenceFixedCell;